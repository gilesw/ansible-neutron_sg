- name: template our os_stack heat file
  template:
    src: "{{ inventory_dir }}/.files/neutron_sg/{{ neutron_sg_source_template }}"
    dest: "{{ neutron_sg_template }}"
  register: neutron_sg_template_result

- name: "list current stacks and search for {{ neutron_sg_stack_name }}"
  shell: "heat stack-list | grep -q {{ neutron_sg_stack_name }}"
  ignore_errors: true
  environment:
    OS_USERNAME: "{{ neutron_sg_username }}"
    OS_PASSWORD: "{{ neutron_sg_password }}"
    OS_TENANT_ID: "{{ neutron_sg_tenant_id }}"
    OS_AUTH_URL: "{{ neutron_sg_auth_url }}"
  register: stack_exists
  changed_when: false
  when: neutron_sg_template_result.changed

- debug: msg="{{ stack_exists }}"

- name: "dry run an update stack to see if anything needs to change be updated"
  shell: "heat stack-update {{ neutron_sg_stack_name }} --template-file {{ neutron_sg_template }} --dry-run > {{ neutron_sg_state_file }}"
  environment:
    OS_USERNAME: "{{ neutron_sg_username }}"
    OS_PASSWORD: "{{ neutron_sg_password }}"
    OS_TENANT_ID: "{{ neutron_sg_tenant_id }}"
    OS_AUTH_URL: "{{ neutron_sg_auth_url }}"
  when: ( stack_exists.rc is defined and stack_exists.rc == 0 ) and neutron_sg_template_result.changed
  ignore_errors: true

- name: "check for updated resources"
  shell: "cat {{ neutron_sg_state_file }} | grep updated "
  when: ( stack_exists.rc is defined and stack_exists.rc == 0 ) and neutron_sg_template_result.changed
  register: stack_updated
  ignore_errors: true

- name: "check for replaced resources"
  shell: "cat {{ neutron_sg_state_file }} | grep replaced "
  when: ( stack_exists.rc is defined and stack_exists.rc == 0 ) and neutron_sg_template_result.changed
  register: stack_replaced
  ignore_errors: true

- name: "require input when things are replaced"
  pause:
    prompt: "things are going to be replaced! {{ stack_replaced.stdout }}"
  when: ( stack_exists.rc is defined and stack_exists.rc == 0 ) and neutron_sg_template_result.changed
  ignore_errors: true

- name: build os_stack
  os_stack:
    auth:
      tenant_id: "{{ neutron_sg_tenant_id }}"
      username: "{{ neutron_sg_username }}"
      password: "{{ neutron_sg_password }}"
      auth_url: "{{ neutron_sg_auth_url }}"
    name: "{{ neutron_sg_stack_name }}"
    state: "{{ neutron_sg_state }}"
    template: "{{ neutron_sg_template }}"
    parameters: "{{ neutron_sg_parameters }}"
  loop_control:
    label: "{{ neutron_sg_template }}"
  when: neutron_sg_template_result.changed
  register: neutron_sg_loop_result
